@use "../tools" as *;

.none {
	display: none !important;
}

.no-scroll {
	overflow: hidden;
}

.visually-hidden {
	@include visually-hidden;
}

.hidden-mobile {
	@include media($tablet, max) {
		display: none !important;
	}
}

.visible-mobile {
	@include media($tablet, min) {
		display: none !important;
	}
}

// для column
.no-break {
	break-inside: avoid;
}

.wrapper {
	display: flex;
	flex-direction: column;
	position: relative;
	overflow: hidden;
	min-height: 100dvh;

	& > main {
		padding-top: var(--header-height);
		flex: 1 1 auto;
	}
}

.container {
	max-width: calc(var(--container-width) + (var(--container-padding) * 2));
	padding-inline: var(--container-padding);
	margin: 0 auto;
}

.flex {
	display: flex;
}

.flex-jc-sb {
	justify-content: space-between;
}

.flex-jc-c {
	justify-content: center;
}

.flex-ai-c {
	align-items: center;
}

.flex-cc {
	justify-content: center;
	align-items: center;
}

.flex-wrap {
	flex-wrap: wrap;
}

@keyframes gravity {
	0% {
		transform: translateY(0);
	}
	100% {
		transform: translateY(-20px);
	}
}

.h1,
.h2,
.h3,
.h4 {
	font-weight: 500;
	line-height: 120%;

	html[lang=ru] & {
		font-weight: 700;
	}
}

.h1 {
	font-size: fluid(60, 32);
}

.h2 {
	font-size: adapt(40, 24);
}

.h3 {
	font-size: adapt(30, 22);
}

.marked {
	--marked-bg: var(--color-green);
	--marked-color: var(--color-black);

	display: inline;
	padding: 0 6px;
	background: var(--marked-bg);
	color: var(--marked-color);
	border-radius: var(--bd-radius-s);
	-webkit-box-decoration-break: clone;
	box-decoration-break: clone;
}

.section {
	padding-block: adapt(70, 16);
}

.box {
	--box-bg: var(--color-grey);
	border-radius: var(--bd-radius-l);
	background: var(--box-bg);
	padding: adapt(40, 24);

	&--shadow {
		border: 1px solid var(--color-dark);
		box-shadow: var(--shadow);
	}
}

.link {
	$line-bg: var(--color-green);

	@include hoverLine(center, $line-bg, 0.2em, 0.2em, var(--duration-fast), 2px);
}

.link-icon {
	display: inline-flex;
	@include square(35px);
	padding: 8px;
	background: var(--color-white);
	border-radius: 100%;
	color: var(--color-dark);
	overflow: hidden;
	position: relative;
	transition: color var(--duration-fast);

	@include hover {
		&::after {
			transform: scale(2.5);
		}
	}

	&::after {
		content: "";
		position: absolute;
		top: 50%;
		left: 50%;
		border-radius: 100%;
		width: 100%;
		height: 100%;
		background: var(--color-green);
		transform: scale(0);
		transition: transform var(--duration-fast);
	}

	.icon {
		position: relative;
		z-index: 2;
	}
	&--dark {
		background: var(--color-dark);
		color: var(--color-green);

		@include hover {
			color: var(--color-dark);
		}
	}
}

// Animations
/* Пульсация */
.pulse {
	animation: pulse 2s infinite ease-in-out;
	transform-origin: center;
}
@keyframes pulse {
	0%,
	100% {
		transform: scale(1);
	}
	50% {
		transform: scale(1.3);
	}
}

/* Вращение */
.rotateX {
	animation: rotateX 3s ease-in-out infinite alternate-reverse;
	transform-origin: center;
}
@keyframes rotateX {
	0% {
		transform: rotateX(0deg);
	}
	100% {
		transform: rotateX(30deg);
	}
}

.rotate {
	animation: rotate 3s ease-in-out infinite alternate-reverse;
	transform-origin: center;
}
@keyframes rotate {
	0% {
		transform: rotate(0deg);
	}
	100% {
		transform: rotate(45deg);
	}
}

/* Лёгкое покачивание (плавающий эффект) */
.float {
	animation: float 4s ease-in-out infinite;
}
@keyframes float {
	0%,
	100% {
		transform: translateY(0);
	}
	50% {
		transform: translateY(-10px);
	}
}

/* Дрожание */
.shake {
	animation: shake 6s ease-in-out infinite alternate-reverse;
	transform-origin: center;
}
@keyframes shake {
	0% {
		transform: rotate(0deg);
	}
	50% {
		transform: rotate(-2deg);
	}
	100% {
		transform: rotate(0deg);
	}
}

.mirror {
	animation: mirror 3s ease-in-out infinite reverse;
	transform-origin: center;
}

@keyframes mirror {
	0% {
		transform: rotateY(0);
	}
	100% {
		transform: rotateY(360deg);
	}
}

.scale {
	animation: scale 3s ease-in-out infinite alternate-reverse;
	transform-origin: center;
}

@keyframes scale {
	0% {
		transform: scale(1);
	}
	100% {
		transform: scale(1.1);
	}
}
.gravity {
	animation: gravity 3s ease-in-out infinite alternate-reverse;
	transform-origin: center;
}

@keyframes gravity {
	0% {
		transform: translateY(-10px);
	}
	100% {
		transform: translateY(10px);
	}
}

[data-mouse-parallax] {
	perspective: 1000px;
}

//[data-running-line] {
//	width: max-content;
//	animation: running-line 30s linear infinite;
//}
//@keyframes running-line {
//	from {
//		transform: translateX(0);
//	}
//	to {
//		transform: translateX(-50%);
//	}
//}
[data-running-line] {
	--running-line-gap: 40px;
	--running-line-speed: 30s;
	--running-line-direction: forwards;

	display: flex;
	gap: var(--running-line-gap);
	width: max-content;
	will-change: transform;
	animation: runningLine var(--running-line-speed, 15s) var(--running-line-direction) infinite linear;
}

@keyframes runningLine {
	$runningLineGap: var(--running-line-gap, 0);

	to {
		transform: translateX(calc(-50% - #{$runningLineGap} / 2));
	}
	//to {
	//	@if ($runningLineGap == 0) {
	//		transform: translateX(-50%);
	//	} @else {
	//		transform: translateX(calc(-50% - #{$runningLineGap} / 6));
	//	}
	//}
}
